//
// Generated file, do not edit! Created by nedtool 5.6 from NDt.msg.
//

#ifndef __NDT_M_H
#define __NDT_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "Set.h"
// }}

/**
 * Class generated from <tt>NDt.msg:21</tt> by nedtool.
 * <pre>
 * message NDt
 * {
 *     int src;
 *     Set RT;
 * }
 * </pre>
 */
class NDt : public ::omnetpp::cMessage
{
  protected:
    int src;
    Set RT;

  private:
    void copy(const NDt& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const NDt&);

  public:
    NDt(const char *name=nullptr, short kind=0);
    NDt(const NDt& other);
    virtual ~NDt();
    NDt& operator=(const NDt& other);
    virtual NDt *dup() const override {return new NDt(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getSrc() const;
    virtual void setSrc(int src);
    virtual Set& getRT();
    virtual const Set& getRT() const {return const_cast<NDt*>(this)->getRT();}
    virtual void setRT(const Set& RT);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const NDt& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, NDt& obj) {obj.parsimUnpack(b);}


#endif // ifndef __NDT_M_H

